image: docker:latest

variables:
  DOCKER_BUILDKIT: 1
  REGISTRY: ${CI_REGISTRY}
  NODE_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/laravel-production-node-builder
  PHP_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/laravel-production-php
  NGINX_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/laravel-production-nginx
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:dind

stages:
  - build
  # - deploy  # Uncomment when ready to implement deployment

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  image: docker:latest
  script:
    # Create .env files
    - mkdir -p docker/node docker/php
    - echo "$ENV_FILE" > docker/node/.env
    - echo "$ENV_FILE" > docker/php/.env
    - cat docker/node/.env

    # Build and push Node builder image
    - docker buildx create --use
    - docker buildx build
      --platform linux/amd64
      --cache-from type=registry,ref=${NODE_IMAGE_NAME}:latest
      --cache-to type=inline
      --push
      -t ${NODE_IMAGE_NAME}:latest
      -f docker/node/Dockerfile
      .

    # Build and push PHP image
    - docker buildx build
      --platform linux/amd64
      --cache-from type=registry,ref=${PHP_IMAGE_NAME}:latest
      --cache-to type=inline
      --push
      -t ${PHP_IMAGE_NAME}:latest
      --build-context node=docker-image://${NODE_IMAGE_NAME}:latest
      -f docker/php/Dockerfile
      .

    # Build and push Nginx image
    - docker buildx build
      --platform linux/amd64
      --cache-from type=registry,ref=${NGINX_IMAGE_NAME}:latest
      --cache-to type=inline
      --push
      -t ${NGINX_IMAGE_NAME}:latest
      --build-context node=docker-image://${NODE_IMAGE_NAME}:latest
      --build-arg HTPASSWD_USER=${HTPASSWD_USER}
      --build-arg HTPASSWD_PASS=${HTPASSWD_PASS}
      -f docker/nginx/Dockerfile
      .
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

# deploy:
#   stage: deploy
#   image: alpine:latest
#   before_script:
#     - apk add --no-cache openssh-client
#     - eval $(ssh-agent -s)
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#   script:
#     # Prepare environment file
#     - echo "$ENV_FILE" > .env
#     - |
#       {
#         echo "REGISTRY=${REGISTRY}"
#         echo "PHP_IMAGE_NAME=${PHP_IMAGE_NAME}"
#         echo "NGINX_IMAGE_NAME=${NGINX_IMAGE_NAME}"
#         echo "TAG=latest"
#       } >> .env
#
#     # Transfer deployment files
#     - scp -P $SSH_PORT docker-compose.production.yml $SSH_USER@$SSH_HOST:~/laravel/docker-compose.yml
#     - scp -P $SSH_PORT .env deploy.sh $SSH_USER@$SSH_HOST:~/laravel/
#
#     # Trigger deployment script
#     - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "cd ~/laravel && chmod +x deploy.sh && ./deploy.sh"
#   rules:
#     - if: $CI_COMMIT_BRANCH == "main"
#   environment:
#     name: production