services:
  app:
    image: ${REGISTRY}/${PHP_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    env_file: .env
    volumes:
      - laravel_storage:/var/www/storage
      - laravel_public:/var/www/public
    ports:
      - "8080:8080"
    networks:
      - laravel_network
    depends_on:
      - redis

  nginx:
    image: ${REGISTRY}/${NGINX_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - laravel_storage:/var/www/storage
      - laravel_public:/var/www/public
    networks:
      - laravel_network
    depends_on:
      - app

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    networks:
      - laravel_network
    volumes:
      - redis_data:/data

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
#    container_name: laravel_elasticsearch
#    environment:
#      - discovery.type=single-node
##      - ES_JAVA_OPTS=-Xms1g -Xmx1g
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#      - xpack.security.enabled=false
#      - xpack.monitoring.collection.enabled=true
#    volumes:
#      - esdata:/usr/share/elasticsearch/data
#    networks:
#      - laravel_network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:9.0.1
#    container_name: laravel_kibana
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    depends_on:
#      - elasticsearch
#    networks:
#      - laravel_network
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:9.0.1
#    container_name: laravel_logstash
#    volumes:
#      - ./docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
#      - ./docker/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
#      - ./docker/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#      - laravel_storage:/var/www/storage/logs:ro
#      - /var/log/nginx:/var/log/nginx:ro
#      - /var/log/php8:/var/log/php8:ro
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    depends_on:
#      - elasticsearch
#    networks:
#      - laravel_network

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    restart: unless-stopped
#    ports:
#      - "9090:9090"
#    volumes:
#      - prometheus_data:/prometheus
#      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    networks:
#      - laravel_network
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    restart: unless-stopped
#    ports:
#      - "3000:3000"
#    volumes:
#      - grafana_data:/var/lib/grafana
#    networks:
#      - laravel_network
#    depends_on:
#      - prometheus

networks:
  laravel_network:
    driver: bridge

volumes:
  laravel_storage:
  laravel_public:
  redis_data:
  prometheus_data:
  grafana_data:
#  esdata:
#    driver: local
