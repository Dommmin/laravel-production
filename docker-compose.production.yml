services:
  app:
    image: ${REGISTRY}/${PHP_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_app
    restart: unless-stopped
    command: php-fpm
    volumes:
      - laravel_storage:/var/www/storage
      - ./.env:/var/www/.env
    networks:
      - laravel_network
    depends_on:
      - redis

  worker:
    image: ${REGISTRY}/${PHP_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_worker
    restart: unless-stopped
    command: php artisan queue:work --verbose --tries=3 --timeout=60
    volumes:
      - ./.env:/var/www/.env
    networks:
      - laravel_network
    depends_on:
      - app
      - redis

  scheduler:
    image: ${REGISTRY}/${PHP_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_scheduler
    restart: unless-stopped
    entrypoint: ["sh", "-c", "while :; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"]
    depends_on:
      - app
    networks:
      - laravel_network

  reverb:
    image: ${REGISTRY}/${PHP_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_reverb
    restart: unless-stopped
    env_file: .env
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "6001:8080"
    depends_on:
      - redis
    networks:
      - laravel_network

  nginx:
    image: ${REGISTRY}/${NGINX_IMAGE_NAME}:${TAG:-latest}
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - laravel_storage:/var/www/storage
    networks:
      - laravel_network
    depends_on:
      - app

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    networks:
      - laravel_network
    volumes:
      - redis_data:/data

networks:
  laravel_network:
    driver: bridge

volumes:
  laravel_storage:
  redis_data:
