services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    container_name: ${COMPOSE_PROJECT_NAME}_app
    command: ["/bin/sh", "-c", "sh /usr/local/bin/start.sh"]
    restart: unless-stopped
    working_dir: /var/www
    volumes:
        - ./:/var/www:cached,rw
        - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
        - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
        - ./docker/supervisord.conf:/etc/supervisor/supervisord.conf:ro
    networks:
      - laravel-network
    ports:
        - "5173:5173"
        - "9000:9000"
    depends_on:
        -   mysql
        -   redis

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/log:/var/log/nginx
    depends_on:
        -   app
    networks:
      - laravel-network

  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    restart: unless-stopped
    environment:
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_DATABASE_TEST: laravel_test
    command:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
    healthcheck:
        test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 60s
    ports:
        - "3306:3306"
    volumes:
        - mysql_data:/var/lib/mysql
    networks:
        - laravel-network

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: unless-stopped
    healthcheck:
        test: [ "CMD", "redis-cli", "ping" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 60s
    ports:
      - "6379:6379"
    networks:
      - laravel-network

  mailhog:
      image: mailhog/mailhog:latest
      container_name: ${COMPOSE_PROJECT_NAME}_mailhog
      restart: unless-stopped
      ports:
          - "1025:1025"
          - "8025:8025"
      volumes:
          - mailhog_data:/maildir
      networks:
          - laravel-network

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  mailhog_data:
    driver: local
