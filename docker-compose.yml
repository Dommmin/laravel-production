services:
    app:
        build:
            context: .
            dockerfile: ./docker/local/php/Dockerfile
            args:
                - USER_ID=${USER_ID:-1000}
                - GROUP_ID=${GROUP_ID:-1000}
        container_name: ${COMPOSE_PROJECT_NAME}_app
        command: ["sh", "-c", "/usr/local/bin/start.sh"]
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www:cached
            - ./docker/local/php/php.ini:/usr/local/etc/php/php.ini
            - ./docker/local/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./docker/local/supervisord.conf:/etc/supervisor/supervisord.conf
        networks:
            - laravel-network
        ports:
            - "5173:5173"
            - "9000:9000"
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy

    nginx:
        image: nginx:alpine
        container_name: ${COMPOSE_PROJECT_NAME}_nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/local/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            -   app
        networks:
            - laravel-network

    mysql:
        image: mysql:8.0
        container_name: ${COMPOSE_PROJECT_NAME}_mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_DATABASE_TEST: laravel_test
        command:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 5s
            timeout: 3s
            retries: 5
            start_period: 60s
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel-network

    redis:
        image: redis:alpine
        container_name: ${COMPOSE_PROJECT_NAME}_redis
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 5s
            timeout: 3s
            retries: 5
            start_period: 60s
        ports:
            - "6379:6379"
        networks:
            - laravel-network

    mailhog:
        image: mailhog/mailhog:latest
        container_name: ${COMPOSE_PROJECT_NAME}_mailhog
        restart: unless-stopped
        ports:
            - "1025:1025"
            - "8025:8025"
        volumes:
            - mailhog_data:/maildir
        networks:
            - laravel-network

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
        container_name: laravel_elasticsearch
        environment:
            - discovery.type=single-node
            - ES_JAVA_OPTS=-Xms1g -Xmx1g
            - xpack.security.enabled=false
            - xpack.monitoring.collection.enabled=true
        ports:
            - "9200:9200"
        volumes:
            - esdata:/usr/share/elasticsearch/data
        networks:
            - laravel-network

    kibana:
        image: docker.elastic.co/kibana/kibana:9.0.1
        container_name: laravel_kibana
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        networks:
            - laravel-network

    logstash:
        image: docker.elastic.co/logstash/logstash:9.0.1
        container_name: laravel_logstash
        volumes:
            - ./docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
            - ./docker/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
            - ./docker/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
            - ./storage/logs:/var/www/storage/logs:ro
            - /var/log/nginx:/var/log/nginx:ro
            - /var/log/php8:/var/log/php8:ro
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch
        networks:
            - laravel-network

networks:
    laravel-network:
        driver: bridge

volumes:
    mysql_data:
        driver: local
    mailhog_data:
        driver: local
    esdata:
        driver: local
