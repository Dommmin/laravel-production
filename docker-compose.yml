services:
  app:
    build:
      context: .
      dockerfile: ./docker/local/php/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    container_name: ${COMPOSE_PROJECT_NAME}_app
    command: ['sh', '-c', '/usr/local/bin/start.sh']
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www:cached
      - ./docker/local/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/local/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/local/supervisord.conf:/etc/supervisor/supervisord.conf
    networks:
      - laravel-network
    ports:
      - '5173:5173'
      - '9000:9000'
      - '8080:8080'
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromedriver:
        condition: service_started

  chromedriver:
    image: selenium/standalone-chrome:latest
    container_name: ${COMPOSE_PROJECT_NAME}_chromedriver
    restart: unless-stopped
    ports:
      - '4444:4444'
    environment:
      - SE_NODE_MAX_SESSIONS=1
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_VNC_NO_PASSWORD=1
    networks:
      - laravel-network

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./:/var/www
      - ./docker/local/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - laravel-network

  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_DATABASE_TEST: laravel_test
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 60s
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel-network

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 60s
    ports:
      - '6379:6379'
    networks:
      - laravel-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mailhog
    restart: unless-stopped
    ports:
      - '1025:1025'
      - '8025:8025'
    volumes:
      - mailhog_data:/maildir
    networks:
      - laravel-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: laravel_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - laravel-network

#    kibana:
#        image: docker.elastic.co/kibana/kibana:9.0.1
#        container_name: laravel_kibana
#        environment:
#            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#        ports:
#            - "5601:5601"
#        depends_on:
#            - elasticsearch
#        networks:
#            - laravel-network
#
#    logstash:
#        image: docker.elastic.co/logstash/logstash:9.0.1
#        container_name: laravel_logstash
#        volumes:
#            - ./docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
#            - ./docker/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
#            - ./docker/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#            - ./storage/logs:/var/www/storage/logs:ro
#            - /var/log/nginx:/var/log/nginx:ro
#            - /var/log/php8:/var/log/php8:ro
#        environment:
#            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#        depends_on:
#            - elasticsearch
#        networks:
#            - laravel-network

#    selenium:
#        image: selenium/standalone-chrome:4.21.0
#        container_name: ${COMPOSE_PROJECT_NAME}_selenium
#        volumes:
#            - /dev/shm:/dev/shm
#        ports:
#            - "4444:4444"
#            - "7900:7900"
#        networks:
#            - laravel-network
#        healthcheck:
#            test: curl --fail http://localhost:4444/status || exit 1
#            interval: 5s
#            retries: 5
#            start_period: 10s
#
#    prometheus:
#        image: prom/prometheus:latest
#        container_name: prometheus
#        restart: unless-stopped
#        ports:
#            - "9090:9090"
#        volumes:
#            - prometheus_data:/prometheus
#            - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#        networks:
#            - laravel-network
#
#    grafana:
#        image: grafana/grafana:latest
#        container_name: grafana
#        restart: unless-stopped
#        ports:
#            - "3000:3000"
#        volumes:
#            - grafana_data:/var/lib/grafana
#        networks:
#            - laravel-network
#        depends_on:
#            - prometheus
#
#    php-fpm-exporter:
#        image: hipages/php-fpm_exporter:latest
#        container_name: php-fpm-exporter
#        restart: unless-stopped
#        environment:
#            PHP_FPM_SCRAPE_URI: tcp://app:9000/status
#        ports:
#            - "9091:9091"
#        networks:
#            - laravel-network
#        depends_on:
#            - app
#
#    nginx-exporter:
#        image: nginx/nginx-prometheus-exporter:latest
#        container_name: nginx-exporter
#        restart: unless-stopped
#        command:
#            - -nginx.scrape-uri=http://nginx:8080/stub_status
#        ports:
#            - "9113:9113"
#        networks:
#            - laravel-network
#        depends_on:
#            - nginx
#
#    loki:
#        image: grafana/loki:2.9.4
#        container_name: loki
#        restart: unless-stopped
#        ports:
#            - "3100:3100"
#        command: -config.file=/etc/loki/local-config.yaml
#        volumes:
#            - loki_data:/loki
#        networks:
#            - laravel-network
#
#    promtail:
#        image: grafana/promtail:2.9.4
#        container_name: promtail
#        restart: unless-stopped
#        volumes:
#            - ./docker/promtail/promtail-config.yaml:/etc/promtail/config.yaml:ro
#            - ./storage/logs:/var/log/laravel:ro
#            - ./docker/local/nginx/logs:/var/log/nginx:ro
#            - /var/log/php8:/var/log/php8:ro
#        command: -config.file=/etc/promtail/config.yaml
#        networks:
#            - laravel-network
#        depends_on:
#            - loki

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  mailhog_data:
    driver: local
  esdata:
    driver: local
  redis_data:
    driver: local
#    prometheus_data:
#    grafana_data:
#    loki_data:
