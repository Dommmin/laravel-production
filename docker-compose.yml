services:
    app:
        build:
            context: .
            dockerfile: docker/local/php/Dockerfile
            args:
                USER_ID: ${USER_ID:-1000}
                GROUP_ID: ${GROUP_ID:-1000}
        container_name: ${COMPOSE_PROJECT_NAME}_app
        command: /usr/local/bin/start.sh
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www:cached
            - ./docker/local/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
            - ./docker/local/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./docker/local/supervisord.conf:/etc/supervisor/supervisord.conf
        environment:
            - APP_ENV=${APP_ENV:-local}
            - APP_DEBUG=${APP_DEBUG:-true}
        networks:
            - laravel-network
        ports:
            - "5173:5173"
            - "9000:9000"
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy

    nginx:
        image: nginx:alpine
        container_name: ${COMPOSE_PROJECT_NAME}_nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker/local/nginx/conf.d:/etc/nginx/conf.d
            - nginx_logs:/var/log/nginx
        depends_on:
            - app
        networks:
            - laravel-network

    mysql:
        image: mysql:8.0
        container_name: ${COMPOSE_PROJECT_NAME}_mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 3s
            retries: 10
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel-network

    redis:
        image: redis:alpine
        container_name: ${COMPOSE_PROJECT_NAME}_redis
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 3s
            retries: 5
        ports:
            - "6379:6379"
        networks:
            - laravel-network

    mailhog:
        image: mailhog/mailhog:latest
        container_name: ${COMPOSE_PROJECT_NAME}_mailhog
        restart: unless-stopped
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - laravel-network

volumes:
    mysql_data:
    nginx_logs:

networks:
    laravel-network:
        driver: bridge
